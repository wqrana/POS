//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevFstPOSSuite.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RetailDBEntities1 : DbContext
    {
        public RetailDBEntities1()
            : base("name=RetailDBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<POInventoryDetail> POInventoryDetails { get; set; }
        public virtual DbSet<POSaleDetail> POSaleDetails { get; set; }
        public virtual DbSet<POExpenseDetail> POExpenseDetails { get; set; }
        public virtual DbSet<POInventoryMaster> POInventoryMasters { get; set; }
        public virtual DbSet<POActivityDetail> POActivityDetails { get; set; }
        public virtual DbSet<AuthenticationRule> AuthenticationRules { get; set; }
        public virtual DbSet<CNF_AppConfiguration> CNF_AppConfiguration { get; set; }
        public virtual DbSet<CNF_Supplier> CNF_Supplier { get; set; }
        public virtual DbSet<CNF_Bank> CNF_Bank { get; set; }
        public virtual DbSet<CNF_ProductType> CNF_ProductType { get; set; }
        public virtual DbSet<STK_UOM> STK_UOM { get; set; }
        public virtual DbSet<SAL_RateListDetail> SAL_RateListDetail { get; set; }
        public virtual DbSet<SAL_RateList> SAL_RateList { get; set; }
        public virtual DbSet<SAL_InvoiceDetail> SAL_InvoiceDetail { get; set; }
        public virtual DbSet<SAL_InvoiceMaster> SAL_InvoiceMaster { get; set; }
        public virtual DbSet<CNF_IncomeType> CNF_IncomeType { get; set; }
        public virtual DbSet<POIncome> POIncomes { get; set; }
        public virtual DbSet<POPaymentDisbursementDetail> POPaymentDisbursementDetails { get; set; }
        public virtual DbSet<POPaymentDisbursement> POPaymentDisbursements { get; set; }
        public virtual DbSet<STK_productMaster> STK_productMaster { get; set; }
        public virtual DbSet<AuthenticationRules_Rights_Detail> AuthenticationRules_Rights_Detail { get; set; }
        public virtual DbSet<SMSCampaign> SMSCampaigns { get; set; }
        public virtual DbSet<SMSCampaignDetail> SMSCampaignDetails { get; set; }
        public virtual DbSet<LOG_NotificationSendingData> LOG_NotificationSendingData { get; set; }
    
        public virtual ObjectResult<sp_rp_dailExpenseDetail_Result> sp_rp_dailExpenseDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_dailExpenseDetail_Result>("sp_rp_dailExpenseDetail", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_rp_POSCustomerList_Result> sp_rp_POSCustomerList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_POSCustomerList_Result>("sp_rp_POSCustomerList");
        }
    
        public virtual int sp_calculateInventoryDealerRate(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_calculateInventoryDealerRate", orderIDParameter);
        }
    
        public virtual ObjectResult<sp_TopSellingItemOverviewReport_Result> sp_TopSellingItemOverviewReport(Nullable<int> periodTypeID)
        {
            var periodTypeIDParameter = periodTypeID.HasValue ?
                new ObjectParameter("PeriodTypeID", periodTypeID) :
                new ObjectParameter("PeriodTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TopSellingItemOverviewReport_Result>("sp_TopSellingItemOverviewReport", periodTypeIDParameter);
        }
    
        public virtual ObjectResult<sp_saleInvoice_itemDetailForReturn_Result> sp_saleInvoice_itemDetailForReturn(string invoiceNo)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_saleInvoice_itemDetailForReturn_Result>("sp_saleInvoice_itemDetailForReturn", invoiceNoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Get_EffectiveProductRate(string productCode, Nullable<System.DateTime> invoiceDate)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Get_EffectiveProductRate", productCodeParameter, invoiceDateParameter);
        }
    
        public virtual ObjectResult<sp_rp_RegisterSaleInvoiceDetail_Result> sp_rp_RegisterSaleInvoiceDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string invoiceNo)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("invoiceNo", invoiceNo) :
                new ObjectParameter("invoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_RegisterSaleInvoiceDetail_Result>("sp_rp_RegisterSaleInvoiceDetail", fromDateParameter, toDateParameter, invoiceNoParameter);
        }
    
        public virtual ObjectResult<string> sp_dailyStockReport(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("reportDate", reportDate) :
                new ObjectParameter("reportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_dailyStockReport", reportDateParameter);
        }
    
        public virtual ObjectResult<sp_rp_productBarcode_Result> sp_rp_productBarcode(Nullable<int> supplierID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("supplierID", supplierID) :
                new ObjectParameter("supplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_productBarcode_Result>("sp_rp_productBarcode", supplierIDParameter);
        }
    
        public virtual ObjectResult<sp_rp_orderInvoiceDetailReport_Result> sp_rp_orderInvoiceDetailReport(Nullable<int> orderID, Nullable<int> supplierID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_orderInvoiceDetailReport_Result>("sp_rp_orderInvoiceDetailReport", orderIDParameter, supplierIDParameter);
        }
    
        public virtual ObjectResult<sp_rp_POPaymentHistoryDetailReport_Result> sp_rp_POPaymentHistoryDetailReport(Nullable<int> supplierID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_POPaymentHistoryDetailReport_Result>("sp_rp_POPaymentHistoryDetailReport", supplierIDParameter);
        }
    
        public virtual ObjectResult<sp_rp_dailyStock_Result> sp_rp_dailyStock(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("reportDate", reportDate) :
                new ObjectParameter("reportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_dailyStock_Result>("sp_rp_dailyStock", reportDateParameter);
        }
    
        public virtual ObjectResult<sp_rp_dailySaleStat_Result> sp_rp_dailySaleStat(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_dailySaleStat_Result>("sp_rp_dailySaleStat", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_rp_MiscIncomeDetail_Result> sp_rp_MiscIncomeDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rp_MiscIncomeDetail_Result>("sp_rp_MiscIncomeDetail", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_dailySaleClosureHistoryDetail_Result> sp_dailySaleClosureHistoryDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_dailySaleClosureHistoryDetail_Result>("sp_dailySaleClosureHistoryDetail", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_rpt_StockInHandValueDetail_Result> sp_rpt_StockInHandValueDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rpt_StockInHandValueDetail_Result>("sp_rpt_StockInHandValueDetail");
        }
    
        public virtual ObjectResult<sp_rpt_ProductActivityDetail_Result> sp_rpt_ProductActivityDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rpt_ProductActivityDetail_Result>("sp_rpt_ProductActivityDetail", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_POSCustomerSrhList_Result> sp_POSCustomerSrhList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_POSCustomerSrhList_Result>("sp_POSCustomerSrhList");
        }
    }
}
